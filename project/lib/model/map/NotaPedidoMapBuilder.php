<?php


/**
 * This class adds structure of 'nota_pedido' table to 'propel' DatabaseMap object.
 *
 *
 * This class was autogenerated by Propel 1.3.0-dev on:
 *
 * Thu Jan 14 12:22:00 2010
 *
 *
 * These statically-built map classes are used by Propel to do runtime db structure discovery.
 * For example, the createSelectSql() method checks the type of a given column used in an
 * ORDER BY clause to know whether it needs to apply SQL to make the ORDER BY case-insensitive
 * (i.e. if it's a text column type).
 *
 * @package    lib.model.map
 */
class NotaPedidoMapBuilder implements MapBuilder {

	/**
	 * The (dot-path) name of this class
	 */
	const CLASS_NAME = 'lib.model.map.NotaPedidoMapBuilder';

	/**
	 * The database map.
	 */
	private $dbMap;

	/**
	 * Tells us if this DatabaseMapBuilder is built so that we
	 * don't have to re-build it every time.
	 *
	 * @return     boolean true if this DatabaseMapBuilder is built, false otherwise.
	 */
	public function isBuilt()
	{
		return ($this->dbMap !== null);
	}

	/**
	 * Gets the databasemap this map builder built.
	 *
	 * @return     the databasemap
	 */
	public function getDatabaseMap()
	{
		return $this->dbMap;
	}

	/**
	 * The doBuild() method builds the DatabaseMap
	 *
	 * @return     void
	 * @throws     PropelException
	 */
	public function doBuild()
	{
		$this->dbMap = Propel::getDatabaseMap(NotaPedidoPeer::DATABASE_NAME);

		$tMap = $this->dbMap->addTable(NotaPedidoPeer::TABLE_NAME);
		$tMap->setPhpName('NotaPedido');
		$tMap->setClassname('NotaPedido');

		$tMap->setUseIdGenerator(true);

		$tMap->addPrimaryKey('ID', 'Id', 'INTEGER', true, null);

		$tMap->addColumn('NUMERO', 'Numero', 'VARCHAR', false, 8);

		$tMap->addColumn('REVISION', 'Revision', 'TINYINT', false, null);

		$tMap->addColumn('FECHA', 'Fecha', 'DATE', false, null);

		$tMap->addColumn('FECHA_PLAZO_ENTREGA', 'FechaPlazoEntrega', 'DATE', false, null);

		$tMap->addForeignKey('PROVEEDOR_ID', 'ProveedorId', 'INTEGER', 'proveedor', 'ID', false, null);

		$tMap->addColumn('PLAZO_ENTREGA', 'PlazoEntrega', 'VARCHAR', false, 100);

		$tMap->addForeignKey('CONDICION_PAGO', 'CondicionPago', 'INTEGER', 'formas_de_pago', 'ID', false, null);

		$tMap->addColumn('CONDICION_PAGO_DETALLE', 'CondicionPagoDetalle', 'VARCHAR', false, 200);

		$tMap->addColumn('CONDICION_LUGAR_ENTREGA', 'CondicionLugarEntrega', 'VARCHAR', false, 100);

		$tMap->addColumn('REMITIR_DOC_A', 'RemitirDocA', 'VARCHAR', false, 100);

		$tMap->addForeignKey('TRANSPORTE_ID', 'TransporteId', 'INTEGER', 'proveedor', 'ID', false, null);

		$tMap->addColumn('LUGAR_ENTREGA', 'LugarEntrega', 'VARCHAR', false, 100);

		$tMap->addColumn('REMITO_PROVEEDOR', 'RemitoProveedor', 'BOOLEAN', false, null);

		$tMap->addColumn('CERTIFICADO_CALIDAD', 'CertificadoCalidad', 'BOOLEAN', false, null);

		$tMap->addColumn('FACTURA', 'Factura', 'BOOLEAN', false, null);

		$tMap->addColumn('MANUALES', 'Manuales', 'BOOLEAN', false, null);

		$tMap->addColumn('ENSAYOS', 'Ensayos', 'BOOLEAN', false, null);

		$tMap->addColumn('CERT_CONFORMIDAD', 'CertConformidad', 'BOOLEAN', false, null);

		$tMap->addColumn('MSDS', 'Msds', 'BOOLEAN', false, null);

		$tMap->addColumn('OTROS', 'Otros', 'BOOLEAN', false, null);

		$tMap->addColumn('OTROS_DESCRIPCION', 'OtrosDescripcion', 'VARCHAR', false, 50);

		$tMap->addColumn('FECHA_ENTREGA', 'FechaEntrega', 'DATE', false, null);

		$tMap->addForeignKey('ADMINISTRA_ID', 'AdministraId', 'INTEGER', 'sf_guard_user', 'ID', false, null);

		$tMap->addForeignKey('SOLICITA_ID', 'SolicitaId', 'INTEGER', 'sf_guard_user', 'ID', false, null);

		$tMap->addForeignKey('CONTROLA_ID', 'ControlaId', 'INTEGER', 'sf_guard_user', 'ID', false, null);

		$tMap->addForeignKey('AUTORIZA_ID', 'AutorizaId', 'INTEGER', 'sf_guard_user', 'ID', false, null);

		$tMap->addColumn('RECEPCION_TOTAL', 'RecepcionTotal', 'BOOLEAN', false, null);

		$tMap->addColumn('BLOQUEADA', 'Bloqueada', 'BOOLEAN', false, null);

		$tMap->addColumn('ULTIMA_REVISION', 'UltimaRevision', 'BOOLEAN', false, null);

		$tMap->addColumn('CREATED_AT', 'CreatedAt', 'TIMESTAMP', false, null);

	} // doBuild()

} // NotaPedidoMapBuilder
