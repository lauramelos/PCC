<?php


/**
 * This class adds structure of 'proveedor' table to 'propel' DatabaseMap object.
 *
 *
 * This class was autogenerated by Propel 1.3.0-dev on:
 *
 * Tue Jan 12 14:28:40 2010
 *
 *
 * These statically-built map classes are used by Propel to do runtime db structure discovery.
 * For example, the createSelectSql() method checks the type of a given column used in an
 * ORDER BY clause to know whether it needs to apply SQL to make the ORDER BY case-insensitive
 * (i.e. if it's a text column type).
 *
 * @package    lib.model.map
 */
class ProveedorMapBuilder implements MapBuilder {

	/**
	 * The (dot-path) name of this class
	 */
	const CLASS_NAME = 'lib.model.map.ProveedorMapBuilder';

	/**
	 * The database map.
	 */
	private $dbMap;

	/**
	 * Tells us if this DatabaseMapBuilder is built so that we
	 * don't have to re-build it every time.
	 *
	 * @return     boolean true if this DatabaseMapBuilder is built, false otherwise.
	 */
	public function isBuilt()
	{
		return ($this->dbMap !== null);
	}

	/**
	 * Gets the databasemap this map builder built.
	 *
	 * @return     the databasemap
	 */
	public function getDatabaseMap()
	{
		return $this->dbMap;
	}

	/**
	 * The doBuild() method builds the DatabaseMap
	 *
	 * @return     void
	 * @throws     PropelException
	 */
	public function doBuild()
	{
		$this->dbMap = Propel::getDatabaseMap(ProveedorPeer::DATABASE_NAME);

		$tMap = $this->dbMap->addTable(ProveedorPeer::TABLE_NAME);
		$tMap->setPhpName('Proveedor');
		$tMap->setClassname('Proveedor');

		$tMap->setUseIdGenerator(true);

		$tMap->addPrimaryKey('ID', 'Id', 'INTEGER', true, null);

		$tMap->addColumn('NOMBRE', 'Nombre', 'VARCHAR', false, 255);

		$tMap->addColumn('CUIT', 'Cuit', 'VARCHAR', false, 20);

		$tMap->addForeignKey('RUBRO_ID', 'RubroId', 'INTEGER', 'proveedor_rubro', 'ID', false, null);

		$tMap->addColumn('TELEFONO', 'Telefono', 'VARCHAR', false, 100);

		$tMap->addColumn('FAX', 'Fax', 'VARCHAR', false, 100);

		$tMap->addColumn('MOVIL', 'Movil', 'VARCHAR', false, 100);

		$tMap->addColumn('EMAIL', 'Email', 'VARCHAR', false, 255);

		$tMap->addColumn('PERSONA_NOMBRE', 'PersonaNombre', 'VARCHAR', false, 100);

		$tMap->addColumn('PERSONA_APELLIDO', 'PersonaApellido', 'VARCHAR', false, 100);

		$tMap->addColumn('DIRECCION_CALLE', 'DireccionCalle', 'VARCHAR', false, 50);

		$tMap->addColumn('DIRECCION_NUMERO', 'DireccionNumero', 'VARCHAR', false, 5);

		$tMap->addColumn('DIRECCION_MANZANA', 'DireccionManzana', 'VARCHAR', false, 5);

		$tMap->addColumn('DIRECCION_BARRIO', 'DireccionBarrio', 'VARCHAR', false, 50);

		$tMap->addColumn('DIRECCION_PISO', 'DireccionPiso', 'VARCHAR', false, 2);

		$tMap->addColumn('DIRECCION_DEPTO', 'DireccionDepto', 'VARCHAR', false, 2);

		$tMap->addForeignKey('LOCALIDAD_ID', 'LocalidadId', 'INTEGER', 'geo_localidad', 'ID', false, null);

		$tMap->addForeignKey('PROVINCIA_ID', 'ProvinciaId', 'INTEGER', 'geo_provincia', 'ID', false, null);

	} // doBuild()

} // ProveedorMapBuilder
