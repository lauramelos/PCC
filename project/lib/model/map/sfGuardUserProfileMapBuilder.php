<?php


/**
 * This class adds structure of 'sf_guard_user_profile' table to 'propel' DatabaseMap object.
 *
 *
 * This class was autogenerated by Propel 1.3.0-dev on:
 *
 * Wed Nov 11 15:54:15 2009
 *
 *
 * These statically-built map classes are used by Propel to do runtime db structure discovery.
 * For example, the createSelectSql() method checks the type of a given column used in an
 * ORDER BY clause to know whether it needs to apply SQL to make the ORDER BY case-insensitive
 * (i.e. if it's a text column type).
 *
 * @package    lib.model.map
 */
class sfGuardUserProfileMapBuilder implements MapBuilder {

	/**
	 * The (dot-path) name of this class
	 */
	const CLASS_NAME = 'lib.model.map.sfGuardUserProfileMapBuilder';

	/**
	 * The database map.
	 */
	private $dbMap;

	/**
	 * Tells us if this DatabaseMapBuilder is built so that we
	 * don't have to re-build it every time.
	 *
	 * @return     boolean true if this DatabaseMapBuilder is built, false otherwise.
	 */
	public function isBuilt()
	{
		return ($this->dbMap !== null);
	}

	/**
	 * Gets the databasemap this map builder built.
	 *
	 * @return     the databasemap
	 */
	public function getDatabaseMap()
	{
		return $this->dbMap;
	}

	/**
	 * The doBuild() method builds the DatabaseMap
	 *
	 * @return     void
	 * @throws     PropelException
	 */
	public function doBuild()
	{
		$this->dbMap = Propel::getDatabaseMap(sfGuardUserProfilePeer::DATABASE_NAME);

		$tMap = $this->dbMap->addTable(sfGuardUserProfilePeer::TABLE_NAME);
		$tMap->setPhpName('sfGuardUserProfile');
		$tMap->setClassname('sfGuardUserProfile');

		$tMap->setUseIdGenerator(true);

		$tMap->addPrimaryKey('ID', 'Id', 'INTEGER', true, null);

		$tMap->addForeignKey('USER_ID', 'UserId', 'INTEGER', 'sf_guard_user', 'ID', true, null);

		$tMap->addColumn('LANGUAGE', 'Language', 'VARCHAR', false, 5);

		$tMap->addColumn('NOMBRE', 'Nombre', 'VARCHAR', false, 255);

		$tMap->addColumn('APELLIDO', 'Apellido', 'VARCHAR', false, 255);

		$tMap->addColumn('FDN', 'Fdn', 'DATE', false, null);

		$tMap->addForeignKey('NACIONALIDAD', 'Nacionalidad', 'INTEGER', 'geo_pais', 'ID', false, null);

		$tMap->addColumn('DOCUMENTO_TIPO', 'DocumentoTipo', 'TINYINT', false, null);

		$tMap->addColumn('DOCUMENTO_NUMERO', 'DocumentoNumero', 'VARCHAR', false, 15);

		$tMap->addColumn('CUIL', 'Cuil', 'VARCHAR', false, 13);

		$tMap->addColumn('LEGAJO', 'Legajo', 'VARCHAR', false, 5);

		$tMap->addColumn('TELEFONO', 'Telefono', 'VARCHAR', false, 255);

		$tMap->addColumn('MOVIL', 'Movil', 'VARCHAR', false, 255);

		$tMap->addColumn('EMAIL', 'Email', 'VARCHAR', false, 255);

		$tMap->addColumn('DOMICILIO_CALLE', 'DomicilioCalle', 'VARCHAR', false, 50);

		$tMap->addColumn('DOMICILIO_NUMERO', 'DomicilioNumero', 'VARCHAR', false, 5);

		$tMap->addColumn('DOMICILIO_MANZANA', 'DomicilioManzana', 'VARCHAR', false, 5);

		$tMap->addColumn('DOMICILIO_BARRIO', 'DomicilioBarrio', 'VARCHAR', false, 50);

		$tMap->addColumn('DOMICILIO_PISO', 'DomicilioPiso', 'VARCHAR', false, 2);

		$tMap->addColumn('DOMICILIO_DEPTO', 'DomicilioDepto', 'VARCHAR', false, 2);

		$tMap->addForeignKey('LOCALIDAD_ID', 'LocalidadId', 'INTEGER', 'geo_localidad', 'ID', false, null);

		$tMap->addForeignKey('PROVINCIA_ID', 'ProvinciaId', 'INTEGER', 'geo_provincia', 'ID', false, null);

		$tMap->addColumn('COMENTARIO', 'Comentario', 'LONGVARCHAR', false, null);

	} // doBuild()

} // sfGuardUserProfileMapBuilder
